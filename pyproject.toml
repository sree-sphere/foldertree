[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "foldertree"
version = "1.3.0"
description = "Generate folder structures from various input formats (tree, YAML, simple indentation)"
authors = [
    {name = "Sreeprad", email = "sreeprad99@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
]
keywords = ["folder", "directory", "structure", "generator", "tree", "scaffold"]
dependencies = [
    "PyYAML>=5.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
]

[project.urls]
Homepage = "https://github.com/sree-sphere/foldertree"
Documentation = "https://github.com/sree-sphere/foldertree#readme"
Repository = "https://github.com/sree-sphere/foldertree"
Issues = "https://github.com/sree-sphere/foldertree/issues"

[project.scripts]
foldertree = "foldertree.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["foldertree*"]

[tool.setuptools.package-data]
foldertree = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py37']

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=foldertree --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["foldertree"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]